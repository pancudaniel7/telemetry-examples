version: "3"
services:
  #
  # Core services. These services allow a Grafana Agent to send data somewhere
  # and visualize it in Grafana.
  #
  # Backends: grafana, loki, cortex, tempo
  # Example services: avalanche
  #

  grafana:
    image: grafana/grafana:9.2.3
    entrypoint:
      - /usr/share/grafana/bin/grafana-server
      - --homepath=/usr/share/grafana
      - --config=/etc/grafana-config/grafana.ini
    volumes:
      - ./grafana/config:/etc/grafana-config
      - ./grafana/datasources:/etc/grafana/provisioning/datasources
      - ./grafana/dashboards-provisioning:/etc/grafana/provisioning/dashboards
      - ./grafana/dashboards:/var/lib/grafana/dashboards
    ports:
      - "3000:3000"

  loki:
    image: grafana/loki:2.6.1
    command: -config.file=/etc/loki/local-config.yaml
    ports:
      - "3100:3100"

  cortex:
    image: cortexproject/cortex:v1.8.1
    volumes:
      - ./cortex/config:/etc/cortex-config
    entrypoint:
      - /bin/cortex
      - -config.file=/etc/cortex-config/cortex.yaml
    ports:
      - "9009:9009"

  tempo:
    image: grafana/tempo:1.5.0
    command:
      - "-search.enabled=true"
      - "-storage.trace.backend=local"                  # tell tempo where to permanently put traces
      - "-storage.trace.local.path=/tmp/tempo/traces"
      - "-storage.trace.wal.path=/tmp/tempo/wal"        # tell tempo where to store the wal
      - "-auth.enabled=false"                           # disables the requirement for the X-Scope-OrgID header
      - "-server.http-listen-port=3200"
    ports:
      - "3200:3200"
      - "4317:4317"

  avalanche:
    image: quay.io/freshtracks.io/avalanche:latest
    command:
      - --metric-count=3000
      - --series-interval=3600
      - --metric-interval=7200
    ports:
      - "9001:9001"

  # tracing load generator
  synthetic-load-generator:
    profiles: [agent] # Should only be run if the Agent is present
    image: omnition/synthetic-load-generator:1.0.25
    volumes:
      - ./load-generator:/etc/load-generator
    environment:
      - TOPOLOGY_FILE=/etc/load-generator/load-generator.json
      - JAEGER_COLLECTOR_URL=http://agent:14268
    depends_on:
      - agent

  #
  # Optional Grafana Agent which can collect telemetry and send it to
  # Loki/Cortex/Tempo.
  #
  # Enable with the "agent" profile.
  #

  agent:
    profiles: [agent]
    image: grafana/agent:latest
    volumes:
      - ./agent/config:/etc/agent-config
    entrypoint:
      - /bin/agent
      - -server.http.address=0.0.0.0:12345
      - -config.file=/etc/agent-config/agent.yaml
      - -metrics.wal-directory=/tmp/agent/wal
      - -enable-features=integrations-next
      - -config.expand-env
      - -config.enable-read-api
    environment:
      HOSTNAME: agent
      REMOTE_WRITE_HOST: cortex:9009
      LOKI_HOST: loki:3100
      TEMPO_HOST: tempo:4317
      AVALANCHE_HOST: avalanche:9001
      MYSQL_HOST: mysql:3306
      POSTGRES_HOST: postgres:5432
      REDIS_HOST: redis:6379
      DNSMASQ_HOST: dnsmasq:53
      MEMCACHED_HOST: memcached:11211
      CONSUL_HOST: consul:8500
      ELASTICSEARCH_HOST: elasticsearch:9200
      KAFKA_HOST: kafka:9093
      MONGODB_HOST: mongodb:27017
    ports:
      - "12345:12345"
    depends_on:
      - cortex
      - loki
      - tempo